server:
  port: 8083

spring:
  application:
    name: order-server # 服务名
  redis:
    host: 47.104.249.62 # Redis服务器连接端口
    port: 6379
    timeout: 30000
    password:

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/ # eureka服务地址

PRODUCT-SERVER:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule # 负载均衡策略
    MaxAutoRetries: 0 # 同一台实例最大重试次数,不包括首次调用
    MaxAutoRetriesNextServer: 0 # 重试负载均衡其他的实例最大重试次数,不包括首次server

#ribbon:
#  http:
#    client:
#      enabled: true
#  restclient:
#    enabled: true
#  # 同一台实例最大重试次数,不包括首次调用
#  MaxAutoRetries: 1
#  # 重试负载均衡其他的实例最大重试次数,不包括首次server
#  MaxAutoRetriesNextServer: 2
#  OkToRetryOnAllOperations: true

feign:
  hystrix:
    enabled: true # 开启feign服务降级
  client:
    config:
      default:
        connectTimeout: 1000 # 链接超时时间(服务降级超时时间即orderService访问其他服务)
        readTimeout: 1000 # 读取超时时间(服务降级超时时间即orderService访问其他服务)

#hystrix的超时时间
hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true #hystrix的默认超时时间是1秒钟
        isolation:
          thread:
            timeoutInMilliseconds: 3000 # (熔断降级超时时间即客户端访问orderService)

management:
  endpoints:
    web:
      exposure:
        include: "*"
